"=========================================================================
" Copyright(c) I-Doctor zhongkai2015@gmail.com
" Descpiption: vimrc file
" Last Change: 2025.07.14 
"=========================================================================


"=================-vim-plug 插件管理器==============================
call plug#begin('~/.vim/plugged')
" List your plugins here
Plug 'morhetz/gruvbox'
Plug 'sainnhe/everforest'
Plug 'dracula/vim',{'as':'dracula'}
Plug 'ku1ik/vim-monokai',{'as':'monokai'}
call plug#end()


"==================display===========================================
syntax on                   " 自动语法高亮
"colorscheme dracula         " 设定配色方案
"colorscheme monokai
"colorscheme everforest
colorscheme gruvbox
set cmdheight=1             " 设定命令行的行数为 1
set laststatus=2
set statusline=%<%f\ %h%m%r%=%k[%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}]\ %-14.(%l,%c%V%)\ %P
set background=dark
set number                  " 显示行号
set ruler                   " 打开状态栏标尺
set cursorcolumn
set cursorline
"highlight CursorLine   cterm=NONE ctermbg=black ctermfg=white guibg=NONE guifg=NONE
highlight CursorLine   cterm=NONE ctermbg=black guibg=NONE guifg=NONE
highlight CursorColumn cterm=NONE ctermbg=black ctermfg=grey guibg=NONE guifg=NONE



"==================edit=============================================
inoremap jk <esc>
set backspace=indent,eol,start
                            " 不设定在插入状态无法用退格键和 Delete 键删除回车符

set shiftwidth=4            " 设定 << 和 >> 命令移动时的宽度为 4
set softtabstop=4           " 使得按退格键时可以一次删掉 4 个空格
set tabstop=4               " 设定 tab 长度为 4
"set smartindent             " 开启新行时使用智能自动缩进

set ignorecase smartcase    " 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感
set incsearch               " 输入搜索内容时就显示搜索结果
set hlsearch                " 搜索时高亮显示被找到的文本
"set nowrapscan              " 禁止在搜索到文件两端时重新搜索

set foldenable              " 开始折叠
set foldmethod=syntax       " 设置语法折叠
set foldcolumn=0            " 设置折叠区域的宽度
setlocal foldlevel=9        " 设置折叠层数为
set foldclose=all           " 设置为自动关闭折叠                            
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
                            " 用空格键来开关折叠

"set showmatch               " 插入括号时，短暂地跳转到匹配的对应括号
"set matchtime=2             " 短暂跳转到匹配括号的时间


"==================file=============================================
filetype plugin indent on   " 开启插件
set nocompatible            " 关闭 vi 兼容模式
set nobackup                " 覆盖文件时不备份
set autoread
set backupcopy=yes          " 设置备份时的行为为覆盖
set hidden                  " 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存

set encoding=utf-8


"==================system===========================================
set noerrorbells            " 关闭错误信息响铃
set novisualbell            " 关闭使用可视响铃代替呼叫
set t_vb=                   " 置空错误铃声的终端代码

set magic                   " 设置魔术
set guioptions-=T           " 隐藏工具栏
set guioptions-=m           " 隐藏菜单栏

nmap <tab> <C-W>w           " nomal模式下tab来切换窗口

set mouse=a
set et
set completeopt=longest,menu


" return OS type, eg: windows, or linux, mac, et.st..
function! MySys()
    if has("win16") || has("win32") || has("win64") || has("win95")
        return "windows"
    elseif has("unix")
        return "linux"
    endif
endfunction


" 用户目录变量$VIMFILES
if MySys() == "windows"
    let $VIMFILES = $VIM.'/vimfiles'
elseif MySys() == "linux"
    let $VIMFILES = $HOME.'/.vim'
endif


" 设定doc文档目录
let helptags=$VIMFILES.'/doc'


" 设置字体 以及中文支持
if has("win32")
    set guifont=Inconsolata:h12:cANSI
endif


" 配置多语言环境
if has("multi_byte")
    " UTF-8 编码
    set encoding=utf-8
    set termencoding=utf-8
    set formatoptions+=mM
    set fencs=utf-8,gbk


    if v:lang =~? '^\(zh\)\|\(ja\)\|\(ko\)'
        set ambiwidth=double
    endif


    if has("win32")
        source $VIMRUNTIME/delmenu.vim
        source $VIMRUNTIME/menu.vim
        language messages zh_CN.utf-8
    endif
else

    echoerr "Sorry, this version of (g)vim was not compiled with +multi_byte"

endif


" Tab操作快捷方式!
"nnoremap <C-TAB> :tabnext<CR>
"nnoremap <C-S-TAB> :tabprev<CR>


"关于tab的快捷键
" map tn :tabnext<cr>
" map tp :tabprevious<cr>
" map td :tabnew .<cr>
" map te :tabedit
" map tc :tabclose<c>
